{"version":3,"sources":["services/phoneNumbers.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","phoneService","getAll","axios","get","then","response","data","create","newPerson","post","removePerson","id","personToRemove","delete","updateNumber","personInfo","person","put","NumbersForm","props","listOfPeople","currentlyInPhonebook","filter","name","toLowerCase","includes","filteredOutPeople","map","phone","onClick","PersonForm","onSubmit","addPerson","value","valuePerson","onChange","onNameChange","valuePhone","onNumberChange","type","FilterForm","filterPeopleByName","onNameFilter","Notification","message","className","ErrorNotification","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","setFilterPeopleByName","displaySuccessMessage","setDisplaySuccessMessage","displayUserNotFound","setDisplayUserNotFound","useEffect","currentPhonebook","filterOutNames","event","console","log","target","preventDefault","window","alert","getID","find","confirm","catch","error","setTimeout","userInfo","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0609c400.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseURL, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n    const personToRemove = baseURL + '/' + id\r\n    const request = axios.delete(personToRemove)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (personInfo) => {\r\n    const [id, person] = personInfo\r\n    const updateNumber = baseURL + '/' + id\r\n    const request = axios.put(updateNumber, person)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst phoneService = {\r\n   getAll,\r\n   create,\r\n   removePerson,\r\n   updateNumber \r\n};\r\n\r\nexport default phoneService;","import React, {useEffect, useState} from 'react'\r\nimport phoneService from './services/phoneNumbers'\r\nimport './index.css'\r\n\r\n\r\nconst NumbersForm = (props) =>{ \r\n  let listOfPeople = []\r\n  listOfPeople = props.currentlyInPhonebook.filter(person => person.name.toLowerCase().includes(props.filteredOutPeople.toLowerCase()))\r\n  if(listOfPeople === ''){\r\n    listOfPeople = [...props.currentlyInPhonebook]\r\n   }\r\n\r\n  return (\r\n    <div>\r\n      {listOfPeople.map(person =>\r\n        <div key= {person.name}> {person.name} {person.phone} <button onClick = {() => props.personToRemove([person.id, person.name])}>delete</button></div>)}\r\n    </div>    \r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit = {props.addPerson}>\r\n      <div>\r\n        name: <input\r\n          value = {props.valuePerson}\r\n          onChange = {props.onNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: <input\r\n          value = {props.valuePhone}\r\n          onChange = {props.onNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type = \"submit\">add</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst FilterForm = (props) => {\r\n  \r\n  return(\r\n    <div>\r\n        Filter shown with: <input \r\n         value = {props.filterPeopleByName}\r\n         onChange = {props.onNameFilter}\r\n         />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n  if(message === null){\r\n    return null\r\n  }\r\n  return(\r\n    <div className=\"userAdded\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ErrorNotification = ({message}) => {\r\n  if(message === null){\r\n    return null\r\n  }\r\n  return(\r\n    <div className=\"userNotFound\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([\r\n    \r\n  ])\r\n  const [newName, setNewName] = useState('')\r\n  const [newPhone, setNewPhone] = useState('')\r\n  const [filterPeopleByName, setFilterPeopleByName] = useState('')\r\n  const [displaySuccessMessage, setDisplaySuccessMessage] = useState(null)\r\n  const [displayUserNotFound, setDisplayUserNotFound] = useState(null)\r\n\r\n  useEffect(() => {\r\n    phoneService\r\n      .getAll()\r\n      .then(currentPhonebook => {\r\n        setPersons(currentPhonebook)\r\n      }) \r\n  }, [])\r\n\r\n  const addName = (event) => {\r\n    \r\n    event.preventDefault()\r\n    if (newName === '' || newPhone === ''){\r\n      return window.alert(`Fields cannot be empty`)\r\n    }\r\n\r\n    let getID\r\n    persons.find(person =>{\r\n      return getID = person.name === newName? person.id : null\r\n    })\r\n    if (getID !== null){\r\n      const isConfirmed =  window.confirm(`${newName} is already added to phonebook. Would you like to replace the old number with a new one?`)\r\n\r\n      if(isConfirmed){\r\n      phoneService\r\n        .updateNumber([getID, {name: newName, phone: newPhone}])\r\n        .then(updateNumber =>{\r\n        setPersons(persons.map(person => person.name !== newName? person : updateNumber))  \r\n        setNewName('')\r\n        setNewPhone('')\r\n        console.log('testing')\r\n        setDisplaySuccessMessage(`${newName}'s number has been updated`)\r\n        })\r\n        .catch(error =>{\r\n          setDisplayUserNotFound(`${newName} has already been removed from database`)\r\n          setTimeout(() => {\r\n            setDisplayUserNotFound(null)\r\n        }, 2000);\r\n          })  \r\n\r\n        setTimeout(() => {\r\n        setDisplaySuccessMessage(null)\r\n    }, 2000);\r\n      }\r\n    }\r\n    else{\r\n      phoneService\r\n        .create({name: newName, phone: newPhone})\r\n        .then(userInfo => {\r\n        setPersons(persons.concat(userInfo))\r\n        setNewName('')\r\n        setNewPhone('')\r\n        })\r\n\r\n        setDisplaySuccessMessage(`Added ${newName}`)\r\n        setTimeout(() => {\r\n          setDisplaySuccessMessage(null)\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  const removePerson = (event) => {\r\n    const [id, name] = event;\r\n    const isConfirmed = window.confirm(`Do you want to delete ${name}?`);\r\n\r\n    if(isConfirmed){\r\n    phoneService\r\n      .removePerson(id)\r\n      .then(() => {\r\n      setPersons(persons.filter(person => person.id !== id))\r\n      })\r\n      .catch(error =>{\r\n        setDisplayUserNotFound(`${newName} has already been removed from database`)\r\n        setTimeout(() => {\r\n          setDisplayUserNotFound(null)\r\n      }, 2000);\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handlePhoneNumber = (event) => {\r\n    console.log(event.target.value)\r\n    setNewPhone(event.target.value)\r\n  }\r\n\r\n  const handleNameFiltering = (event) => {\r\n    console.log(event.target.value)\r\n    setFilterPeopleByName(event.target.value)\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={displaySuccessMessage}/>\r\n      <ErrorNotification message={displayUserNotFound}/>\r\n      <FilterForm filterOutNames = {filterPeopleByName} currentlyInPhonebook = {persons} onNameFilter = {handleNameFiltering}/>\r\n      <h2>Add a new</h2>\r\n      <PersonForm valuePerson = {newName} valuePhone = {newPhone} onNameChange = {handleNameChange} onNumberChange = {handlePhoneNumber} addPerson = {addName}/>\r\n      <h2>Numbers</h2>\r\n      <NumbersForm currentlyInPhonebook = {persons} filteredOutPeople = {filterPeopleByName} personToRemove = {removePerson}/>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}